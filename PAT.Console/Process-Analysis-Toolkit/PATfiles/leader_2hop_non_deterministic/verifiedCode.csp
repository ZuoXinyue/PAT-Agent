#define NUM_NODES 3;
#define NUM_COLORS 3;
#define VIEW_ARRAY_SIZE 9;
#define COLOR_0 0;
#define COLOR_1 1;
#define COLOR_2 2;
#define FLAG_ZERO 0;
#define FLAG_ONE 1;
#define U_0_1 0;
#define V_0_1 1;
#define U_0_2 0;
#define V_0_2 2;
#define U_1_2 1;
#define V_1_2 2;
#define U_1_0 1;
#define V_1_0 0;
#define U_2_0 2;
#define V_2_0 0;
#define U_2_1 2;
#define V_2_1 1;

var nodeColors[NUM_NODES] = [0, 1, 2];
var colorViews[VIEW_ARRAY_SIZE] = [0, 0, 0, 0, 0, 0, 0, 0, 0];

Interaction_0_1() = 
    [colorViews[0*3+nodeColors[1]] != colorViews[1*3+nodeColors[0]]] set_color_to_0{nodeColors[0] = 0; colorViews[0*3+nodeColors[1]] = colorViews[1*3+nodeColors[0]];} -> Interaction_0_1()
    []
    [colorViews[0*3+nodeColors[1]] != colorViews[1*3+nodeColors[0]]] set_color_to_1{nodeColors[0] = 1; colorViews[0*3+nodeColors[1]] = colorViews[1*3+nodeColors[0]];} -> Interaction_0_1()
    []
    [colorViews[0*3+nodeColors[1]] != colorViews[1*3+nodeColors[0]]] set_color_to_2{nodeColors[0] = 2; colorViews[0*3+nodeColors[1]] = colorViews[1*3+nodeColors[0]];} -> Interaction_0_1()
    []
    [colorViews[0*3+nodeColors[1]] == colorViews[1*3+nodeColors[0]] && colorViews[0*3+nodeColors[1]] == 0 && colorViews[1*3+nodeColors[0]] == 0] flip_flags_from_zero{colorViews[0*3+nodeColors[1]] = 1; colorViews[1*3+nodeColors[0]] = 1;} -> Interaction_0_1()
    []
    [colorViews[0*3+nodeColors[1]] == colorViews[1*3+nodeColors[0]] && colorViews[0*3+nodeColors[1]] == 1 && colorViews[1*3+nodeColors[0]] == 1] flip_flags_from_one{colorViews[0*3+nodeColors[1]] = 0; colorViews[1*3+nodeColors[0]] = 0;} -> Interaction_0_1();

Interaction_0_2() = 
    [colorViews[0*3+nodeColors[2]] != colorViews[2*3+nodeColors[0]]] set_color_to_0{nodeColors[0] = 0; colorViews[0*3+nodeColors[2]] = colorViews[2*3+nodeColors[0]];} -> Interaction_0_2()
    []
    [colorViews[0*3+nodeColors[2]] != colorViews[2*3+nodeColors[0]]] set_color_to_1{nodeColors[0] = 1; colorViews[0*3+nodeColors[2]] = colorViews[2*3+nodeColors[0]];} -> Interaction_0_2()
    []
    [colorViews[0*3+nodeColors[2]] != colorViews[2*3+nodeColors[0]]] set_color_to_2{nodeColors[0] = 2; colorViews[0*3+nodeColors[2]] = colorViews[2*3+nodeColors[0]];} -> Interaction_0_2()
    []
    [colorViews[0*3+nodeColors[2]] == colorViews[2*3+nodeColors[0]] && colorViews[0*3+nodeColors[2]] == 0 && colorViews[2*3+nodeColors[0]] == 0] flip_flags_from_zero{colorViews[0*3+nodeColors[2]] = 1; colorViews[2*3+nodeColors[0]] = 1;} -> Interaction_0_2()
    []
    [colorViews[0*3+nodeColors[2]] == colorViews[2*3+nodeColors[0]] && colorViews[0*3+nodeColors[2]] == 1 && colorViews[2*3+nodeColors[0]] == 1] flip_flags_from_one{colorViews[0*3+nodeColors[2]] = 0; colorViews[2*3+nodeColors[0]] = 0;} -> Interaction_0_2();

Interaction_1_2() = 
    [colorViews[1*3+nodeColors[2]] != colorViews[2*3+nodeColors[1]]] set_color_to_0{nodeColors[1] = 0; colorViews[1*3+nodeColors[2]] = colorViews[2*3+nodeColors[1]];} -> Interaction_1_2()
    []
    [colorViews[1*3+nodeColors[2]] != colorViews[2*3+nodeColors[1]]] set_color_to_1{nodeColors[1] = 1; colorViews[1*3+nodeColors[2]] = colorViews[2*3+nodeColors[1]];} -> Interaction_1_2()
    []
    [colorViews[1*3+nodeColors[2]] != colorViews[2*3+nodeColors[1]]] set_color_to_2{nodeColors[1] = 2; colorViews[1*3+nodeColors[2]] = colorViews[2*3+nodeColors[1]];} -> Interaction_1_2()
    []
    [colorViews[1*3+nodeColors[2]] == colorViews[2*3+nodeColors[1]] && colorViews[1*3+nodeColors[2]] == 0 && colorViews[2*3+nodeColors[1]] == 0] flip_flags_from_zero{colorViews[1*3+nodeColors[2]] = 1; colorViews[2*3+nodeColors[1]] = 1;} -> Interaction_1_2()
    []
    [colorViews[1*3+nodeColors[2]] == colorViews[2*3+nodeColors[1]] && colorViews[1*3+nodeColors[2]] == 1 && colorViews[2*3+nodeColors[1]] == 1] flip_flags_from_one{colorViews[1*3+nodeColors[2]] = 0; colorViews[2*3+nodeColors[1]] = 0;} -> Interaction_1_2();

Interaction_1_0() = 
    [colorViews[1*3+nodeColors[0]] != colorViews[0*3+nodeColors[1]]] set_color_to_0{nodeColors[1] = 0; colorViews[1*3+nodeColors[0]] = colorViews[0*3+nodeColors[1]];} -> Interaction_1_0()
    []
    [colorViews[1*3+nodeColors[0]] != colorViews[0*3+nodeColors[1]]] set_color_to_1{nodeColors[1] = 1; colorViews[1*3+nodeColors[0]] = colorViews[0*3+nodeColors[1]];} -> Interaction_1_0()
    []
    [colorViews[1*3+nodeColors[0]] != colorViews[0*3+nodeColors[1]]] set_color_to_2{nodeColors[1] = 2; colorViews[1*3+nodeColors[0]] = colorViews[0*3+nodeColors[1]];} -> Interaction_1_0()
    []
    [colorViews[1*3+nodeColors[0]] == colorViews[0*3+nodeColors[1]] && colorViews[1*3+nodeColors[0]] == 0 && colorViews[0*3+nodeColors[1]] == 0] flip_flags_from_zero{colorViews[1*3+nodeColors[0]] = 1; colorViews[0*3+nodeColors[1]] = 1;} -> Interaction_1_0()
    []
    [colorViews[1*3+nodeColors[0]] == colorViews[0*3+nodeColors[1]] && colorViews[1*3+nodeColors[0]] == 1 && colorViews[0*3+nodeColors[1]] == 1] flip_flags_from_one{colorViews[1*3+nodeColors[0]] = 0; colorViews[0*3+nodeColors[1]] = 0;} -> Interaction_1_0();

Interaction_2_0() = 
    [colorViews[2*3+nodeColors[0]] != colorViews[0*3+nodeColors[2]]] set_color_to_0{nodeColors[2] = 0; colorViews[2*3+nodeColors[0]] = colorViews[0*3+nodeColors[2]];} -> Interaction_2_0()
    []
    [colorViews[2*3+nodeColors[0]] != colorViews[0*3+nodeColors[2]]] set_color_to_1{nodeColors[2] = 1; colorViews[2*3+nodeColors[0]] = colorViews[0*3+nodeColors[2]];} -> Interaction_2_0()
    []
    [colorViews[2*3+nodeColors[0]] != colorViews[0*3+nodeColors[2]]] set_color_to_2{nodeColors[2] = 2; colorViews[2*3+nodeColors[0]] = colorViews[0*3+nodeColors[2]];} -> Interaction_2_0()
    []
    [colorViews[2*3+nodeColors[0]] == colorViews[0*3+nodeColors[2]] && colorViews[2*3+nodeColors[0]] == 0 && colorViews[0*3+nodeColors[2]] == 0] flip_flags_from_zero{colorViews[2*3+nodeColors[0]] = 1; colorViews[0*3+nodeColors[2]] = 1;} -> Interaction_2_0()
    []
    [colorViews[2*3+nodeColors[0]] == colorViews[0*3+nodeColors[2]] && colorViews[2*3+nodeColors[0]] == 1 && colorViews[0*3+nodeColors[2]] == 1] flip_flags_from_one{colorViews[2*3+nodeColors[0]] = 0; colorViews[0*3+nodeColors[2]] = 0;} -> Interaction_2_0();

Interaction_2_1() = 
    [colorViews[2*3+nodeColors[1]] != colorViews[1*3+nodeColors[2]]] set_color_to_0{nodeColors[2] = 0; colorViews[2*3+nodeColors[1]] = colorViews[1*3+nodeColors[2]];} -> Interaction_2_1()
    []
    [colorViews[2*3+nodeColors[1]] != colorViews[1*3+nodeColors[2]]] set_color_to_1{nodeColors[2] = 1; colorViews[2*3+nodeColors[1]] = colorViews[1*3+nodeColors[2]];} -> Interaction_2_1()
    []
    [colorViews[2*3+nodeColors[1]] != colorViews[1*3+nodeColors[2]]] set_color_to_2{nodeColors[2] = 2; colorViews[2*3+nodeColors[1]] = colorViews[1*3+nodeColors[2]];} -> Interaction_2_1()
    []
    [colorViews[2*3+nodeColors[1]] == colorViews[1*3+nodeColors[2]] && colorViews[2*3+nodeColors[1]] == 0 && colorViews[1*3+nodeColors[2]] == 0] flip_flags_from_zero{colorViews[2*3+nodeColors[1]] = 1; colorViews[1*3+nodeColors[2]] = 1;} -> Interaction_2_1()
    []
    [colorViews[2*3+nodeColors[1]] == colorViews[1*3+nodeColors[2]] && colorViews[2*3+nodeColors[1]] == 1 && colorViews[1*3+nodeColors[2]] == 1] flip_flags_from_one{colorViews[2*3+nodeColors[1]] = 0; colorViews[1*3+nodeColors[2]] = 0;} -> Interaction_2_1();

leader_2hop_non_deterministic() = Interaction_0_1() ||| Interaction_0_2() ||| Interaction_1_2() ||| Interaction_1_0() ||| Interaction_2_0() ||| Interaction_2_1();

#define twohopcoloring (nodeColors[0] != nodeColors[1] && nodeColors[1] != nodeColors[2] && nodeColors[2] != nodeColors[0]);

#assert leader_2hop_non_deterministic() |= <>[]twohopcoloring;