=======================================================
Assertion: Game() reaches goal_lose
********Verification Result********
The Assertion (Game() reaches goal_lose) is VALID.
The following trace leads to a state where the condition is satisfied.
<init -> increase -> [if((((board[(3 + (4 * 3))] == s) && (click[(3 + (4 * 3))] != open)) && (click[(3 + (4 * 3))] != flag)))] -> [if!(((3 == 0) && (3 == 0)))] -> [if!(((3 == 0) && (3 == (Co - 1))))] -> [if!(((3 == (Ro - 1)) && (3 == 0)))] -> [if(((3 == (Ro - 1)) && (3 == (Co - 1))))] -> bubble -> [if!((((board[(2 + (4 * 2))] == s) && (click[(2 + (4 * 2))] != open)) && (click[(2 + (4 * 2))] != flag)))] -> [if(((click[(2 + (4 * 2))] != open) && (click[(2 + (4 * 2))] != flag)))] -> [if!((recursiveOrnot == false))] -> penacell -> [if((((board[(2 + (4 * 3))] == s) && (click[(2 + (4 * 3))] != open)) && (click[(2 + (4 * 3))] != flag)))] -> [if!(((3 == 0) && (2 == 0)))] -> [if!(((3 == 0) && (2 == (Co - 1))))] -> [if!(((3 == (Ro - 1)) && (2 == 0)))] -> [if!(((3 == (Ro - 1)) && (2 == (Co - 1))))] -> [if!((3 == 0))] -> [if!((2 == 0))] -> [if((3 == (Ro - 1)))] -> bubble -> [if!((((board[(1 + (4 * 2))] == s) && (click[(1 + (4 * 2))] != open)) && (click[(1 + (4 * 2))] != flag)))] -> [if(((click[(1 + (4 * 2))] != open) && (click[(1 + (4 * 2))] != flag)))] -> [if!((recursiveOrnot == false))] -> penacell -> [if!((((board[(1 + (4 * 3))] == s) && (click[(1 + (4 * 3))] != open)) && (click[(1 + (4 * 3))] != flag)))] -> [if(((click[(1 + (4 * 3))] != open) && (click[(1 + (4 * 3))] != flag)))] -> [if!((recursiveOrnot == false))] -> penacell -> [if!((((board[(3 + (4 * 3))] == s) && (click[(3 + (4 * 3))] != open)) && (click[(3 + (4 * 3))] != flag)))] -> [if!(((click[(3 + (4 * 3))] != open) && (click[(3 + (4 * 3))] != flag)))] -> [if!((((board[(3 + (4 * 2))] == s) && (click[(3 + (4 * 2))] != open)) && (click[(3 + (4 * 2))] != flag)))] -> [if(((click[(3 + (4 * 2))] != open) && (click[(3 + (4 * 2))] != flag)))] -> [if!((recursiveOrnot == false))] -> penacell -> [if!((((board[(2 + (4 * 2))] == s) && (click[(2 + (4 * 2))] != open)) && (click[(2 + (4 * 2))] != flag)))] -> [if!(((click[(2 + (4 * 2))] != open) && (click[(2 + (4 * 2))] != flag)))] -> changeVar -> flagacell -> increase -> [if!((((board[(0 + (4 * 2))] == s) && (click[(0 + (4 * 2))] != open)) && (click[(0 + (4 * 2))] != flag)))] -> [if(((click[(0 + (4 * 2))] != open) && (click[(0 + (4 * 2))] != flag)))] -> [if((recursiveOrnot == false))] -> penacell -> flagacell -> increase -> [if!((((board[(0 + (4 * 3))] == s) && (click[(0 + (4 * 3))] != open)) && (click[(0 + (4 * 3))] != flag)))] -> [if(((click[(0 + (4 * 3))] != open) && (click[(0 + (4 * 3))] != flag)))] -> [if((recursiveOrnot == false))] -> penacell>

********Verification Setting********
Admissible Behavior: All
Search Engine: First Witness Trace using Depth First Search
System Abstraction: False


********Verification Statistics********
Visited States:110
Total Transitions:111
Time Used:0.0109796s
Estimated Memory Used:8530.536KB


